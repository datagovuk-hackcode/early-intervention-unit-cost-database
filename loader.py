# coding: utf-8
from database import *

db.drop_all()
db.create_all()

for category in [
    'CRIME',
    'EDUCATION & SKILLS',
    'EMPLOYMENT & ECONOMY',
    'FIRE',
    'HEALTH',
    'HOUSING',
    'SOCIAL SERVICES',
    'X-CUTTING'
]:
    cat = OutcomeCategory(category)
    db.session.add(cat)

db.session.commit()

for detail in [
    '-',
    'ADAPTATIONS',
    'ADULT RESIDENTIAL / NURSING CARE',
    'ADULTS',
    'ADULTS WITH LEARNING DISABILITIES',
    'ADULTS WITH PHYSICAL DISABILITIES',
    'ALCOHOL',
    'ANTI-SOCIAL BEHAVIOUR',
    'ASSESSMENT',
    'BENEFITS',
    'BUILDINGS',
    'CASE MANAGEMENT',
    'CHILD PROTECTION',
    'CHILDREN',
    'CHILDREN IN NEED',
    'COMMUNITY HEALTH PROVISION',
    'DENTAL',
    'DOMESTIC VIOLENCE',
    'DRUGS',
    'EARNINGS',
    'EMPLOYMENT',
    'EVICTION',
    'EXCLUSION',
    'GP / NURSE',
    'HOME / COMMUNITY CARE',
    'HOMELESSNESS',
    'HOSPITAL',
    'INTERMEDIATE CARE',
    'LABOUR COSTS PER HOUR',
    'LOOKED AFTER CHILDREN',
    'MENTAL HEALTH',
    'NEIGHBOURHOOD DISPUTES',
    'NOISE',
    'NON-BUILDINGS',
    'OBESITY',
    'OFFENDING',
    'OTHER SERVICES',
    'PROCEEDINGS',
    'PROGRAMMES',
    'PROPERTY & VEHICLE CRIME',
    'PUPIL SUPPORT',
    'REABLEMENT',
    'RENT ARREARS',
    'SCHOOL READINESS',
    'SMOKING',
    'TAX',
    'TELECARE',
    'TELEHEALTH',
    'THEFT',
    'TRUANCY',
    'UNEMPLOYMENT',
    'VANDALISM',
    'VIOLENCE',
    'YOUNG PEOPLE',
    'YOUTH OFFENDING'
]:
    det = OutcomeDetail(detail)
    db.session.add(det)

db.session.commit()

for level, agency in [
    (1, 'Court'),
    (1, 'Criminal Justice System'),
    (1, 'Department for Education'),
    (1, 'DWP'),
    (1, 'Educational Establishment'),
    (1, 'Fire Service'),
    (1, 'HM Treasury'),
    (1, 'Local Authority'),
    (1, 'Ministry of Justice'),
    (1, 'Multiple'),
    (1, 'NHS'),
    (1, 'Police'),
    (1, 'Prison / Young Offenders Institute'),
    (1, 'Private sector'),
    (1, 'RSL'),
    (1, 'Schools'),
    (1, 'Society / Economic'),
    (1, 'VCS'),
    (2, '-'),
    (2, 'Acute Trust / Hospital'),
    (2, 'Adult Services'),
    (2, 'Benefits'),
    (2, 'CAFCASS'),
    (2, 'Children\'s Services'),
    (2, 'College'),
    (2, 'Community Health Provider'),
    (2, 'Community Safety Partnership'),
    (2, 'Connexions Service'),
    (2, 'Court'),
    (2, 'Courts'),
    (2, 'DAAT (Drug & Alcohol Action Teams)'),
    (2, 'DWP'),
    (2, 'Education Services'),
    (2, 'Environmental Services'),
    (2, 'Fire Service'),
    (2, 'GP'),
    (2, 'HM Treasury'),
    (2, 'Housing Services'),
    (2, 'JCP'),
    (2, 'Legal aid'),
    (2, 'Local authority'),
    (2, 'Mental Health Trust'),
    (2, 'Multiple'),
    (2, 'Police'),
    (2, 'Primary Care Trust / Clinical Commissioning Group'),
    (2, 'Prison'),
    (2, 'Probation'),
    (2, 'RSL'),
    (2, 'School'),
    (2, 'Social Services'),
    (2, 'VCS'),
    (2, 'Victim services'),
    (2, 'Young Offenders Institute'),
    (2, 'Youth Offending Team')
]:
    ag = Agency(agency, level)
    db.session.add(ag)

db.session.commit()

for unit in [
    'Each',
    'Face to face contact',
    'For two years',
    'Lifetime',
    'None-face to face contact',
    'Per action',
    'Per admission',
    'Per advice session',
    'Per application',
    'Per attendance',
    'Per bed day',
    'Per call',
    'Per case',
    'Per case per team member',
    'Per child',
    'Per child over a 25 year period',
    'Per child over a ten year period',
    'Per child per course',
    'Per child per year',
    'Per claim',
    'Per claimant',
    'Per claimant per year',
    'Per client',
    'Per client per week',
    'Per clinic hour',
    'Per consultation',
    'Per course',
    'Per customer',
    'Per day',
    'Per episode',
    'Per event',
    'Per FTE',
    'Per half hour',
    'Per home visit',
    'Per hour',
    'Per hour per team member',
    'Per incident',
    'Per intervention',
    'Per intervention per annum',
    'Per journey',
    'Per month',
    'Per night',
    'Per order',
    'Per participant',
    'Per patient for treatment period',
    'Per patient hour',
    'Per patient per year',
    'Per person ',
    'Per person per week',
    'Per person per year',
    'Per plan',
    'Per proceeding',
    'Per process',
    'Per programme',
    'Per property',
    'Per pupil per year',
    'Per quitter',
    'Per scheme',
    'Per school academic year',
    'Per service user contact',
    'Per service user contact',
    'Per session',
    'Per six weeks',
    'Per test',
    'Per transfer',
    'Per user',
    'Per vaccine',
    'Per visit',
    'Per week',
    'Per year',
    'Project to Feb 10',
    'Six month programme',
    'Two hours per week'
]:
    uni = Unit(unit)
    db.session.add(uni)

db.session.commit()

for year, change in [
    (1989, 6.74),
    (1990, 7.14),
    (1991, 6.51),
    (1992, 2.17),
    (1993, 2.16),
    (1994, 1.44),
    (1995, 2.74),
    (1996, 1.96),
    (1997, -1.07),
    (1998, 1.91),
    (1999, 1.97),
    (2000, 0.71),
    (2001, 2.72),
    (2002, 2.33),
    (2003, 1.94),
    (2004, 2.76),
    (2005, 1.83),
    (2006, 2.87),
    (2007, 2.51),
    (2008, 2.80),
    (2009, 2.76),
    (2010, 2.61),
    (2011, 2.29),
    (2012, 1.50),
    (2013, 2.30),
    (2014, 1.90),
    (2015, 1.80),
    (2016, 1.70),
    (2017, 1.70)
]:
    gdp = GDP(year, change)
    db.session.add(gdp)

db.session.commit()
